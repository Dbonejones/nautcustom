[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Expense Claim", 
  "modified": "2017-06-13 16:27:24.233706", 
  "name": "Expense Claim-Client", 
  "script": "frappe.ui.form.on(\"Expense Claim\", \"refresh\", function(frm) {\n\tif (frm.doc.__islocal){\n\t\tcur_frm.fields_dict.expenses.grid.toggle_enable(\"receipt\", false);\n\t\tcur_frm.fields_dict.expenses.grid.set_column_disp(\"receipt\", false);\n        \t}\n\t}\n);\nfrappe.ui.form.on(\"Expense Claim\", \"validate\", function(frm) {\n\tcur_frm.fields_dict.expenses.grid.toggle_enable(\"receipt\", true);\n\tcur_frm.fields_dict.expenses.grid.set_column_disp(\"receipt\", true);\n        }\n);\n/*frappe.ui.form.on(\"Expense Claim\", \"refresh\", function(frm) {\n\tcur_frm.set_value(\"employee\", frappe.defaults.get_user_default(\"Employee\"));\n\t}\n);*/\ncur_frm.add_fetch(\"employee\", \"department\", \"department\");", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Quotation", 
  "modified": "2016-11-10 20:30:44.880042", 
  "name": "Quotation-Client", 
  "script": "cur_frm.fields_dict['multi_tc'].grid.get_field('mt_title').get_query = function(doc) {\n    return {\n        filters: [[\n            'Terms and Conditions', 'type', '=', doc.type_select\n        ]]\n    }\n};", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Request for Quotation", 
  "modified": "2016-12-12 13:14:42.471214", 
  "name": "Request for Quotation-Client", 
  "script": "frappe.ui.form.on(\"Request for Quotation\",{\nrefresh: function(frm) {\nif(frm.doc.docstatus==1) {\nfrm.add_custom_button(__(\"Load Attachments\"), function(foo) {\n\n    \tfrappe.call({\n    \t\tmethod:\"nautcustom.nautcustom.load_attachments.attach_all_docs\",\n    \t\targs: {\n    \t\t\tdocument: cur_frm.doc,\n\n    \t\t},\n    \t\tcallback: function(r) {\n    \t\t\tfrm.reload_doc();\n\n    \t\t}\n    \t});\n\n});\n}\n}\n});\ncur_frm.fields_dict['multi_tc'].grid.get_field('mt_title').get_query = function(doc) {\n    return {\n        filters: [[\n            'Terms and Conditions', 'type', '=', doc.type_select\n        ]]\n    }\n};", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Order", 
  "modified": "2016-12-12 13:14:32.686955", 
  "name": "Purchase Order-Client", 
  "script": "frappe.ui.form.on(\"Purchase Order\",{\nrefresh: function(frm) {\nif(frm.doc.docstatus==1) {\nfrm.add_custom_button(__(\"Load Attachments\"), function(foo) {\n\n    \tfrappe.call({\n    \t\tmethod:\"nautcustom.nautcustom.load_attachments.attach_all_docs\",\n    \t\targs: {\n    \t\t\tdocument: cur_frm.doc,\n\n    \t\t},\n    \t\tcallback: function(r) {\n    \t\t\tfrm.reload_doc();\n\n    \t\t}\n    \t});\n\n});\n}\n}\n});\ncur_frm.fields_dict['multi_tc'].grid.get_field('mt_title').get_query = function(doc) {\n    return {\n        filters: [[\n            'Terms and Conditions', 'type', '=', doc.type_select\n        ]]\n    }\n};", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Attendance", 
  "modified": "2017-07-31 10:42:12.984175", 
  "name": "Attendance-Client", 
  "script": "cur_frm.add_fetch(\"employee\", \"department\", \"department\");", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Leave Application", 
  "modified": "2017-06-13 16:27:11.524932", 
  "name": "Leave Application-Client", 
  "script": "frappe.ui.form.on(\"Leave Application\", {\n\"employee\": function(frm) {\n\t\tif(frm.doc.employee) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.hr.doctype.leave_application.leave_application.get_leave_balance_on\",\n\t\t\t\targs: {\n\t\t\t\t\temployee: frm.doc.employee,\n\t\t\t\t\tdate: frm.doc.posting_date,\n\t\t\t\t\tleave_type: 'Sick Leave',\n\t\t\t\t\tconsider_all_leaves_in_the_allocation_period: true\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif (!r.exc && r.message) {\n\t\t\t\t\t\tfrm.set_value('sick_days', r.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//else(frm.set_value('sick_days')==='');\n}\n});\nfrappe.ui.form.on(\"Leave Application\", {\n\"employee\": function(frm) {\n\t\tif(frm.doc.employee) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.hr.doctype.leave_application.leave_application.get_leave_balance_on\",\n\t\t\t\targs: {\n\t\t\t\t\temployee: frm.doc.employee,\n\t\t\t\t\tdate: frm.doc.posting_date,\n\t\t\t\t\tleave_type: 'Vacation',\n\t\t\t\t\tconsider_all_leaves_in_the_allocation_period: true\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif (!r.exc && r.message) {\n\t\t\t\t\t\tfrm.set_value('vacation_days', r.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//else(frm.set_value('vacation_days')==='');\n}\n});\ncur_frm.add_fetch(\"employee\", \"department\", \"department\");", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2017-03-30 17:13:22.395351", 
  "name": "Sales Order-Client", 
  "script": "cur_frm.fields_dict['multi_tc'].grid.get_field('mt_title').get_query = function(doc) {\n    return {\n        filters: [[\n            'Terms and Conditions', 'type', '=', doc.type_select\n        ]]\n    }\n};", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Opportunity", 
  "modified": "2017-08-22 14:38:03.707070", 
  "name": "Opportunity-Client", 
  "script": "frappe.ui.form.on(\"Opportunity Item\", \"qty\", function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    frappe.model.set_value(cdt, cdn, \"amount\", d.qty * d.rate);\n});\nfrappe.ui.form.on(\"Opportunity Item\", \"qty\", function(frm, cdt, cdn){\n// code for calculate total and set on parent field.\ntotal = 0;\n$.each(frm.doc.items || [], function(i, d) {\ntotal += flt(d.amount);\n});\nfrm.set_value(\"total\" , total);\n});\nfrappe.ui.form.on(\"Opportunity Item\", \"rate\", function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    frappe.model.set_value(cdt, cdn, \"amount\", d.qty * d.rate);\n});\nfrappe.ui.form.on(\"Opportunity Item\", \"rate\", function(frm, cdt, cdn){\n// code for calculate total and set on parent field.\ntotal = 0;\n$.each(frm.doc.items || [], function(i, d) {\ntotal += flt(d.amount);\n});\nfrm.set_value(\"total\" , total);\n});\nfrappe.ui.form.on(\"Opportunity Item\", \"item_code\", function(frm, cdt, cdn) {\nrow = locals[cdt][cdn];\nfrappe.call({\nmethod: \"frappe.client.get\",\nargs: {\ndoctype: \"Item Price\",\nfilters: {\n\"item_code\": row.item_code,\n\"price_list\": cur_frm.doc.price_list\n}\n},\ncallback: function (data) {\nfrappe.model.set_value(cdt, cdn, \"rate\", data.message.price_list_rate);\n}\n})\n});\nfrappe.ui.form.on(\"Opportunity\", \"profit\", function(frm) {\n    frm.set_value(\"total_profit\", (frm.doc.profit / 100 * frm.doc.total)*(frm.doc.probability / 100));\n});\nfrappe.ui.form.on(\"Opportunity\", \"probability\", function(frm) {\n    frm.set_value(\"total_profit\", (frm.doc.profit / 100 * frm.doc.total)*(frm.doc.probability / 100));\n});\nfrappe.ui.form.on(\"Opportunity\", {\n\"with_items\": function(frm) {\n        if (frm.doc.with_items=='1') {\n          (frm.toggle_reqd('probability', true));\n          (frm.toggle_reqd('est_year', true));\n          (frm.toggle_reqd('profit', true));\n        }\n        else {\n          (frm.toggle_reqd('probability', false));\n          (frm.toggle_reqd('est_year', false));\n          (frm.toggle_reqd('profit', false));\n        }\n      }\n});", 
  "script_type": "Client"
 }
]